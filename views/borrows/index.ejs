<!-- DataTables CSS & JS -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>

<div class="container mt-4">
    <h2>Borrow Requests</h2>
    
    <div class="table-responsive">
        <table id="adminTable" class="table table-striped">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>User</th>
                    <th>Book</th>
                    <th>Request Date</th>
                    <th>Pickup Date</th>
                    <th>Due Date</th>
                    <th>Status</th>
                    <th>Fine Amount</th>
                    <th>Approval</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% borrows.forEach(borrow => { %>
                    <tr data-borrow-id="<%= borrow.id %>">
                        <td><%= borrow.id %></td>
                        <td><%= borrow.full_name %></td>
                        <td><%= borrow.title %></td>
                        <td><%= new Date(borrow.request_date).toLocaleString() %></td>
                        <td>
                            <% if (borrow.pickup_date) { %>
                                <%= new Date(borrow.pickup_date).toLocaleString() %>
                            <% } else { %>
                                -
                            <% } %>
                        </td>
                        <td>
                            <% if (borrow.due_date) { %>
                                <%= new Date(borrow.due_date).toLocaleString() %>
                            <% } else { %>
                                -
                            <% } %>
                        </td>
                        <td>
                            <% let isOverdue = false;
                               if (borrow.status === 'borrowed' && borrow.due_date && new Date(borrow.due_date) < new Date() && !borrow.return_date) {
                                   isOverdue = true;
                               }
                               let statusLabel = isOverdue ? 'Overdue' : (borrow.status.charAt(0).toUpperCase() + borrow.status.slice(1));
                               let badgeClass = isOverdue ? 'danger' :
                                   (borrow.status === 'requested' ? 'warning' :
                                   borrow.status === 'borrowed' ? 'primary' :
                                   borrow.status === 'returned' ? 'success' :
                                   borrow.status === 'overdue' ? 'danger' :
                                   'secondary');
                            %>
                            <span class="badge bg-<%= badgeClass %>">
                                <%= statusLabel %>
                            </span>
                        </td>
                        <td class="current-fine-cell">-</td>
                        <td>
                            <% if (borrow.approval_status === 'pending') { %>
                                <span class="badge bg-warning">Pending</span>
                            <% } else if (borrow.approval_status === 'approved') { %>
                                <span class="badge bg-success">Approved</span>
                                <br>
                                <small>By: <%= borrow.approver_name %></small>
                            <% } else if (borrow.approval_status === 'rejected') { %>
                                <span class="badge bg-danger">Rejected</span>
                                <br>
                                <small>By: <%= borrow.approver_name %></small>
                            <% } %>
                        </td>
                        <td>
                            <div class="btn-group">
                                <a href="/borrows/request/<%= borrow.id %>" class="btn btn-info btn-sm">
                                    <i class="fas fa-eye me-1"></i> View
                                </a>
                                <% if (borrow.status === 'requested') { %>
                                    <form action="/borrows/approve/<%= borrow.id %>" method="POST" class="d-inline">
                                        <button type="submit" class="btn btn-success btn-sm">
                                            <i class="fas fa-check me-1"></i> Approve
                                        </button>
                                    </form>
                                    <form action="/borrows/reject/<%= borrow.id %>" method="POST" class="d-inline">
                                        <button type="submit" class="btn btn-danger btn-sm">
                                            <i class="fas fa-times me-1"></i> Reject
                                        </button>
                                    </form>
                                <% } else if (borrow.status === 'borrowed' || borrow.status === 'overdue') { %>
                                    <form action="/borrows/return/<%= borrow.id %>" method="POST" class="d-inline">
                                        <button type="submit" class="btn btn-primary btn-sm">
                                            <i class="fas fa-undo me-1"></i> Return
                                        </button>
                                    </form>
                                <% } %>
                            </div>
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>
</div>

<script>
$(document).ready(function() {
    $('#adminTable').DataTable();
});
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const borrowRows = document.querySelectorAll('tr[data-borrow-id]');
    borrowRows.forEach(row => {
        const borrowId = row.getAttribute('data-borrow-id');
        fetch(`/payments/status/${borrowId}`)
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    const fineCell = row.querySelector('.current-fine-cell');
                    if (fineCell) {
                        if (data.current_fine > 0) {
                            fineCell.innerHTML = `<span class='text-danger fw-bold'>${data.current_fine.toLocaleString('vi-VN')} VND</span>`;
                        } else {
                            fineCell.innerHTML = '-';
                        }
                    }
                }
            });
    });
});
</script>

<%- include('../layouts/footer') %>

<script>
// Remove the confirmPayment and rejectPayment functions since they're no longer needed
</script> 